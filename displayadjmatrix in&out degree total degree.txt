#include <stdio.h>

#define MAX 100

int adjMatrix[MAX][MAX];
 
void addEdge(int u, int v) {
    adjMatrix[u][v] = 1;
}

int calculateIndegree(int vertex, int n) {
    int indegree = 0;
    for (int i = 0; i < n; i++) {
        if (adjMatrix[i][vertex] == 1) {
            indegree++;
        }
    }
    return indegree;
}

int calculateOutdegree(int vertex, int n) {
    int outdegree = 0;
    for (int i = 0; i < n; i++) {
        if (adjMatrix[vertex][i] == 1) {
            outdegree++;
        }
    }
    return outdegree;
}

void printDegrees(int n) {
    for (int vertex = 0; vertex < n; vertex++) {
        int indegree = calculateIndegree(vertex, n);
        int outdegree = calculateOutdegree(vertex, n);
        int totalDegree = indegree + outdegree;
        
        printf("Vertex %d:\n", vertex);
        printf("  Indegree: %d\n", indegree);
        printf("  Outdegree: %d\n", outdegree);
        printf("  Total Degree: %d\n", totalDegree);
    }
}

int main() {
    int n, edges, u, v;

    for (int i = 0; i < MAX; i++) {
        for (int j = 0; j < MAX; j++) {
            adjMatrix[i][j] = 0;
        }
    }

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    for (int i = 0; i < edges; i++) {
        printf("Enter the edge (u v): ");
        scanf("%d %d", &u, &v);
        addEdge(u, v);
    }

    printf("Degrees of all vertices:\n");
    printDegrees(n);

    return 0;
}